plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.deloitte'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}
bootWar {
	archiveName getProjectProperty('warName')
}

task deploy (dependsOn: build){
    doLast{
        delete getProjectProperty('deployPath')+getProjectProperty('warName')[0,-4], getProjectProperty('deployPath')+ getProjectProperty('warName') 
        copy {
            from "build/libs"
            into getProjectProperty('deployPath')
            include getProjectProperty('warName')
        }
   }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
	testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.4.2'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
}



def String getProjectProperty(String propertyName)
{
  String movieTitle = "null"
  if (hasProperty(propertyName))
  {
     movieTitle = this.properties[propertyName]
  }
  return movieTitle
}
